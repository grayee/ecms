<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2018. Tianyi AIDOC Company.Inc. All Rights Reserved.
  -->

<!--  说明：
     Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，
     你会看到log4j2内部各种详细输出。可以设置成OFF(关闭) 或 Error(只输出错误信息)。
     30s 刷新此配置
-->
<configuration status="WARN" monitorInterval="30">

  <!--全局参数:日志文件目录、压缩文件目录、日志格式配置 -->
  <properties>
    <Property name="LOG_HOME">/data/logs/test</Property>
    <Property name="LOG_GZ_HOME">/data/logs/7z/test</Property>
    <Property name="PID">????</Property>
    <!--日志输出的格式-->
    <!--
        %d{yyyy-MM-dd HH:mm:ss, SSS} : 日志生产时间,输出到毫秒的时间
        %-5level : 输出日志级别，-5表示左对齐并且固定输出5个字符，如果不足在右边补0
        %c : logger的名称(%logger)
        %t : 输出当前线程名称
        %p : 日志输出格式
        %m : 日志内容，即 logger.info("message")
        %n : 换行符
        %C : Java类名(%F)
        %L : 行号
        %M : 方法名
        %l : 输出语句所在的行数, 包括类名、方法名、文件名、行数
        hostName : 本地机器名
        hostAddress : 本地ip地址
     -->
    <Property name="LOG_PATTERN">%clr{%d{yyyy-MM-dd HH:mm:ss.SSS}}{faint} %clr{%5p} %clr{${sys:PID}}{magenta} %clr{---}{faint} %clr{[%15.15t]}{faint} %clr{%-40.40c{1.}}{cyan} %clr{:}{faint} %m%n%xwEx</Property>
  </properties>

  <Appenders>
    <!-- 输出控制台日志的配置 -->
    <Console name="Console" target="SYSTEM_OUT">
      <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
      <ThresholdFilter level="debug" onMatch="ACCEPT" onMismatch="DENY"/>
      <!-- 输出日志的格式 -->
      <PatternLayout pattern="${LOG_PATTERN}"/>
    </Console>

    <!--文件会打印出所有信息，这个log每次运行程序会自动清空，由append属性决定，这个也挺有用的，测试用-->
    <File name="Test" fileName="${LOG_HOME}/tianyi-test.log" append="false">
      <PatternLayout pattern="%d{HH:mm:ss.SSS} %-5level %class{36} %L %M - %msg%xEx%n"/>
    </File>

    <!-- 打印出所有的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档 -->
    <RollingFile name="INFO" fileName="${LOG_HOME}/tianyi-info.log" immediateFlush="false"
      filePattern="${LOG_GZ_HOME}/$${date:yyyy-MM}/%d{yyyy-MM-dd}-%i.tianyi-info.gz">
      <PatternLayout pattern="${LOG_PATTERN}"/>

      <Policies>
        <SizeBasedTriggeringPolicy size="20 MB"/>
      </Policies>

      <Filters>
        <!-- 只记录info和warn级别信息 -->
        <ThresholdFilter level="error" onMatch="DENY" onMismatch="NEUTRAL"/>
        <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
      </Filters>

      <!-- 指定每天的最大压缩包个数，默认7个，超过了会覆盖之前的 -->
      <DefaultRolloverStrategy max="50"/>
    </RollingFile>

    <!-- 存储所有error信息 -->
    <RollingFile name="ERROR" fileName="${LOG_HOME}/tianyi-error.log" immediateFlush="false"
      filePattern="${LOG_GZ_HOME}/$${date:yyyy-MM}/%d{yyyy-MM-dd}-%i.tianyi-error.gz">
      <PatternLayout pattern="${LOG_PATTERN}"/>

      <Policies>
        <SizeBasedTriggeringPolicy size="50 MB"/>
      </Policies>

      <Filters>
        <!-- 只记录error级别信息 -->
        <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>
      </Filters>

      <!-- 指定每天的最大压缩包个数，默认7个，超过了会覆盖之前的 -->
      <DefaultRolloverStrategy max="50"/>
    </RollingFile>
  </Appenders>

  <!-- Mixed sync/async -->
  <Loggers>
    <!--
    <Root level="all" includeLocation="true">
      <AppenderRef ref="Console"/>
      <AppenderRef ref="INFO"/>
      <AppenderRef ref="ERROR"/>
    </Root>
    -->
    <!-- 异步记录日志，减少性能影响,需要LMAX Disruptor的支持 -->
    <AsyncRoot level="debug" includeLocation="true">
      <AppenderRef ref="Test"/>
      <AppenderRef ref="Console"/>
      <AppenderRef ref="INFO"/>
      <AppenderRef ref="ERROR"/>
      <Logger name="com.tianyi.mapper" level="TRACE" additivity="false">       //为dao mapper所在的包，level为TRACE
        <AppenderRef ref="Console"/>
      </Logger>

      <Logger name="springfox.documentation.spring.web.readers.operation" level="WARN" additivity="false">
        <AppenderRef ref="Console"/>
      </Logger>
      <Logger name="org.springframework.aop.framework" level="WARN" additivity="false">
        <AppenderRef ref="Console"/>
      </Logger>
    </AsyncRoot>
  </Loggers>

</configuration>